// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Comment displays image attachments 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
    </div>
  </div>
  <CardImageAttachments
    attachments={
      Array [
        Object {
          "attachmentType": "image",
          "url": "foo.png",
        },
      ]
    }
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={
      Array [
        Object {
          "attachmentType": "image",
          "url": "foo.png",
        },
      ]
    }
    data-stylename="files"
  />
  <ClickCatcher
    groupSlug="foo"
  >
    <ForwardRef(HyloEditor)
      contentHTML="<p>text of the comment</p>"
      data-stylename="text"
      onEnter={[Function]}
      onEscape={[Function]}
      readOnly={true}
    />
    <EmojiRow
      attachments={
        Array [
          Object {
            "attachmentType": "image",
            "url": "foo.png",
          },
        ]
      }
      childComments={Array []}
      createdAt={2022-10-30T21:11:38.942Z}
      creator={
        Object {
          "avatarUrl": "foo.jpg",
          "id": 1,
          "name": "Joe Smith",
        }
      }
      currentUser={
        Object {
          "id": 2,
        }
      }
      text="<p>text of the comment</p>"
    />
  </ClickCatcher>
</div>
`;

exports[`Comment displays the delete menu when deleteComment is defined 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
      <Dropdown
        data-stylename="dropdown"
        items={
          Array [
            Object {
              "icon": "Edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "Trash",
              "label": "Delete",
              "onClick": [Function],
            },
          ]
        }
        toggleChildren={
          <Icon
            name="More"
          />
        }
      />
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <ClickCatcher
    groupSlug="foo"
  >
    <ForwardRef(HyloEditor)
      contentHTML="<p>text of the comment</p>"
      data-stylename="text"
      onEnter={[Function]}
      onEscape={[Function]}
      readOnly={true}
    />
    <EmojiRow
      attachments={Array []}
      childComments={Array []}
      createdAt={2022-10-30T21:11:38.942Z}
      creator={
        Object {
          "avatarUrl": "foo.jpg",
          "id": 1,
          "name": "Joe Smith",
        }
      }
      currentUser={
        Object {
          "id": 1,
        }
      }
      text="<p>text of the comment</p>"
    />
  </ClickCatcher>
</div>
`;

exports[`Comment displays the remove menu when removeComment is defined 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
      <Dropdown
        data-stylename="dropdown"
        items={
          Array [
            Object {
              "icon": "Trash",
              "label": "Remove",
              "onClick": [Function],
            },
          ]
        }
        toggleChildren={
          <Icon
            name="More"
          />
        }
      />
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <ClickCatcher
    groupSlug="foo"
  >
    <ForwardRef(HyloEditor)
      contentHTML="<p>text of the comment</p>"
      data-stylename="text"
      onEnter={[Function]}
      onEscape={[Function]}
      readOnly={true}
    />
    <EmojiRow
      attachments={Array []}
      childComments={Array []}
      createdAt={2022-10-30T21:11:38.942Z}
      creator={
        Object {
          "avatarUrl": "foo.jpg",
          "id": 1,
          "name": "Joe Smith",
        }
      }
      currentUser={
        Object {
          "id": 2,
        }
      }
      text="<p>text of the comment</p>"
    />
  </ClickCatcher>
</div>
`;

exports[`Comment does not display the delete menu when deleteComment is not defined 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <ClickCatcher
    groupSlug="foo"
  >
    <ForwardRef(HyloEditor)
      contentHTML="<p>text of the comment</p>"
      data-stylename="text"
      onEnter={[Function]}
      onEscape={[Function]}
      readOnly={true}
    />
    <EmojiRow
      attachments={Array []}
      childComments={Array []}
      createdAt={2022-10-30T21:11:38.942Z}
      creator={
        Object {
          "avatarUrl": "foo.jpg",
          "id": 1,
          "name": "Joe Smith",
        }
      }
      currentUser={
        Object {
          "id": 2,
        }
      }
      text="<p>text of the comment</p>"
    />
  </ClickCatcher>
</div>
`;

exports[`Comment does not display the remove menu when removeComment is not defined 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
      <Dropdown
        data-stylename="dropdown"
        items={
          Array [
            Object {
              "icon": "Edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "Trash",
              "label": "Delete",
              "onClick": [Function],
            },
          ]
        }
        toggleChildren={
          <Icon
            name="More"
          />
        }
      />
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <ClickCatcher
    groupSlug="foo"
  >
    <ForwardRef(HyloEditor)
      contentHTML="<p>text of the comment</p>"
      data-stylename="text"
      onEnter={[Function]}
      onEscape={[Function]}
      readOnly={true}
    />
    <EmojiRow
      attachments={Array []}
      childComments={Array []}
      createdAt={2022-10-30T21:11:38.942Z}
      creator={
        Object {
          "avatarUrl": "foo.jpg",
          "id": 1,
          "name": "Joe Smith",
        }
      }
      currentUser={
        Object {
          "id": 1,
        }
      }
      text="<p>text of the comment</p>"
    />
  </ClickCatcher>
</div>
`;

exports[`Comment renders correctly 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <ClickCatcher
    groupSlug="foo"
  >
    <ForwardRef(HyloEditor)
      contentHTML="<p>text of the comment</p>"
      data-stylename="text"
      onEnter={[Function]}
      onEscape={[Function]}
      readOnly={true}
    />
    <EmojiRow
      attachments={Array []}
      childComments={Array []}
      createdAt={2022-10-30T21:11:38.942Z}
      creator={
        Object {
          "avatarUrl": "foo.jpg",
          "id": 1,
          "name": "Joe Smith",
        }
      }
      currentUser={
        Object {
          "id": 2,
        }
      }
      text="<p>text of the comment</p>"
    />
  </ClickCatcher>
</div>
`;

exports[`Comment renders correctly when editing 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      Editing now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
      <Icon
        data-stylename="cancelIcon"
        name="Ex"
        onClick={[Function]}
      />
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <ClickCatcher
    groupSlug="foo"
  >
    <ForwardRef(HyloEditor)
      contentHTML="<p>text of the comment</p>"
      data-stylename="editing"
      onEnter={[Function]}
      onEscape={[Function]}
      readOnly={false}
    />
    <EmojiRow
      attachments={Array []}
      childComments={Array []}
      createdAt={2022-10-30T21:11:38.942Z}
      creator={
        Object {
          "avatarUrl": "foo.jpg",
          "id": 1,
          "name": "Joe Smith",
        }
      }
      currentUser={
        Object {
          "id": 2,
        }
      }
      text="<p>text of the comment</p>"
    />
  </ClickCatcher>
</div>
`;
