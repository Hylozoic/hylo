// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shows NotFound if a currentUser is loaded and the group does not exist 1`] = `
<Div100vh
  data-stylename="container"
>
  <RedirectRoute
    exact={true}
    path="/:context(public)/(members|settings)"
    to="/public"
  />
  <RedirectRoute
    exact={true}
    path="/:context(all)/(members|settings)"
    to="/all"
  />
  <Route
    path="/:context(all|public|groups)"
    render={[Function]}
  />
  <Connect(TopNav)
    currentUser={
      Object {
        "hasRegistered": true,
      }
    }
    data-stylename="top"
    onClick={[Function]}
    routeParams={
      Object {
        "view": "",
      }
    }
  />
  <Route
    component={[Function]}
    path={
      Array [
        "/:context(groups)/:groupSlug/(.*)/create",
        "/:context(groups)/:groupSlug/create",
        "/:context(public|all)/(.*)/create",
        "/:context(public|all)/create",
        "(.*)/:detail(post)/:postId(\\\\d+)/:action(edit)",
      ]
    }
  />
  <div
    data-stylename="main"
    onClick={[Function]}
  >
    <Route
      component={[Function]}
      path={
        Array [
          "/:context(groups)/:groupSlug/:view?",
          "/:context(all|public)/:view?",
        ]
      }
    />
    <Div100vh
      data-stylename="center"
      id="center-column"
    >
      <Switch>
        <Route
          component={[Function]}
          path="/welcome"
        />
        <Route
          path="/:view(members)/:personId/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
          render={[Function]}
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(MemberProfile)",
              "type": [Function],
            }
          }
          path="/:context(all)/:view(members)/:personId/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Stream)",
              "type": [Function],
            }
          }
          path="/:context(all|public)/:view(stream)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Feed)",
              "type": [Function],
            }
          }
          path="/:context(all|public)/:view(projects)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Events)",
              "type": [Function],
            }
          }
          path="/:context(all|public)/:view(events)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(MapExplorer)",
              "type": [Function],
            }
          }
          path="/:context(all|public)/:view(map)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(MapExplorer)",
              "type": [Function],
            }
          }
          path="/:context(all|public)/:view(map)/:detail(group)?/(:detailGroupSlug)?"
        />
        <Route
          component={[Function]}
          path="/:context(public)/:view(groups)/:detail(group)?/(:detailGroupSlug)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Feed)",
              "type": [Function],
            }
          }
          path="/:context(all|public)/:view(topics)/:topicName"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(AllTopics)",
              "type": [Function],
            }
          }
          path="/:context(all)/:view(topics)"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Stream)",
              "type": [Function],
            }
          }
          path="/:context(all|public)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={[Function]}
          path={
            Array [
              "/:context(groups)/:groupSlug/join/:accessCode",
              "/h/use-invitation",
            ]
          }
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(MapExplorer)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(map)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(MapExplorer)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(map)/:detail(group)?/(:detailGroupSlug)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Stream)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(stream)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(LandingPage)",
              "type": [Function],
            }
          }
          exact={true}
          path="/:context(groups)/:groupSlug/:view(explore)/:detail(group)/:detailGroupSlug"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(LandingPage)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(explore)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Feed)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(projects)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Events)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(events)/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Groups)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(groups)"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Members)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(members)/create"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(MemberProfile)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(members)/:personId/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Members)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(members)"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Feed)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(topics)/:topicName/:detail(post)?/:postId(\\\\d+)?/:action(new|edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(AllTopics)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(topics)"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(GroupSettings)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug/:view(settings)"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Stream)",
              "type": [Function],
            }
          }
          exact={true}
          path="/:context(groups)/:groupSlug/:detail(post)/:postId(\\\\d+)/:action(edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Stream)",
              "type": [Function],
            }
          }
          path="/:context(groups)/:groupSlug"
        />
        <Route
          path="/messages/:messageThreadId?"
          render={[Function]}
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(UserSettings)",
              "type": [Function],
            }
          }
          path="/settings"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Search)",
              "type": [Function],
            }
          }
          path="/search"
        />
        <Redirect
          to="/all"
        />
      </Switch>
    </Div100vh>
    <div
      data-stylename="detail hidden"
      id="detail-column"
    >
      <Switch>
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(PostDetail)",
              "type": [Function],
            }
          }
          key="/:context(all|public)/:view(events|explore|map|projects|stream)/:detail(post)/:postId(\\\\d+)/:action(edit)?"
          path="/:context(all|public)/:view(events|explore|map|projects|stream)/:detail(post)/:postId(\\\\d+)/:action(edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(GroupDetail)",
              "type": [Function],
            }
          }
          key="/:context(all|public)/:view(map)/:detail(group)/:detailGroupSlug"
          path="/:context(all|public)/:view(map)/:detail(group)/:detailGroupSlug"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(GroupDetail)",
              "type": [Function],
            }
          }
          key="/:context(public)/:view(groups)/:detail(group)/:detailGroupSlug"
          path="/:context(public)/:view(groups)/:detail(group)/:detailGroupSlug"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(PostDetail)",
              "type": [Function],
            }
          }
          key="/:context(all)/:view(members)/:personId/:detail(post)/:postId(\\\\d+)/:action(edit)?"
          path="/:context(all)/:view(members)/:personId/:detail(post)/:postId(\\\\d+)/:action(edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(PostDetail)",
              "type": [Function],
            }
          }
          key="/:context(all|public)/:detail(post)/:postId(\\\\d+)/:action(edit)?"
          path="/:context(all|public)/:detail(post)/:postId(\\\\d+)/:action(edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(PostDetail)",
              "type": [Function],
            }
          }
          key="/:context(groups)/:groupSlug/:view(events|explore|map|projects|stream)/:detail(post)/:postId(\\\\d+)/:action(edit)?"
          path="/:context(groups)/:groupSlug/:view(events|explore|map|projects|stream)/:detail(post)/:postId(\\\\d+)/:action(edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(PostDetail)",
              "type": [Function],
            }
          }
          key="/:context(groups)/:groupSlug/:view(members)/:personId/:detail(post)/:postId(\\\\d+)/:action(edit)?"
          path="/:context(groups)/:groupSlug/:view(members)/:personId/:detail(post)/:postId(\\\\d+)/:action(edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(GroupDetail)",
              "type": [Function],
            }
          }
          key="/:context(groups)/:groupSlug/:view(explore|map|groups)/:detail(group)/:detailGroupSlug"
          path="/:context(groups)/:groupSlug/:view(explore|map|groups)/:detail(group)/:detailGroupSlug"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(PostDetail)",
              "type": [Function],
            }
          }
          key="/:context(groups)/:groupSlug/:view(topics)/:topicName/:detail(post)/:postId(\\\\d+)/:action(edit)?"
          path="/:context(groups)/:groupSlug/:view(topics)/:topicName/:detail(post)/:postId(\\\\d+)/:action(edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(PostDetail)",
              "type": [Function],
            }
          }
          key="/:context(groups)/:groupSlug/:detail(post)/:postId(\\\\d+)/:action(edit)?"
          path="/:context(groups)/:groupSlug/:detail(post)/:postId(\\\\d+)/:action(edit)?"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(GroupDetail)",
              "type": [Function],
            }
          }
          key="/:context(groups)/:groupSlug/:detail(group)/:detailGroupSlug"
          path="/:context(groups)/:groupSlug/:detail(group)/:detailGroupSlug"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(PostDetail)",
              "type": [Function],
            }
          }
          key="/:view(members)/:personId/:detail(post)/:postId(\\\\d+)/:action(edit)?"
          path="/:view(members)/:personId/:detail(post)/:postId(\\\\d+)/:action(edit)?"
        />
      </Switch>
    </div>
  </div>
  <Connect(SocketListener)
    location={
      Object {
        "pathname": "",
        "search": "",
      }
    }
  />
  <Connect(SocketSubscriber)
    type="group"
  />
  <Intercom
    appID=""
    hide_default_launcher={true}
  />
</Div100vh>
`;

exports[`shows nothing for a group route if the group and currentUser are not loaded 1`] = `
<div
  data-stylename="container"
>
  <Loading
    type="loading-fullscreen"
  />
</div>
`;
