// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches the snapshot for an orphan user 1`] = `
<FeedBanner
  all={true}
  currentUser={
    Object {
      "avatarUrl": "me.png",
      "firstName": [Function],
      "memberships": Object {
        "count": [Function],
      },
    }
  }
  currentUserHasMemberships={false}
/>
`;

exports[`postPromptString renders a post prompt string 1`] = `"Hi anybody, what would you like to create?"`;

exports[`postPromptString renders a post prompt string 2`] = `"Hi anybody, what's on your mind?"`;

exports[`renders for all groups 1`] = `
<FeedBanner
  all={true}
  currentUser={
    Object {
      "avatarUrl": "me.png",
      "firstName": [Function],
      "memberships": Object {
        "count": [Function],
      },
    }
  }
  currentUserHasMemberships={true}
/>
`;

exports[`renders with a group 1`] = `
<FeedBanner
  group={
    Object {
      "avatarUrl": "avatar.png",
      "bannerUrl": "banner.png",
      "location": "space, duh",
      "name": "Spacebase",
    }
  }
>
  <div
    data-stylename="banner"
  >
    <div
      data-stylename="image"
      style={
        Object {
          "backgroundImage": "url(banner.png)",
        }
      }
    >
      <div
        data-stylename="fade"
      >
        <div
          data-stylename="fade2"
        />
      </div>
      <div
        data-stylename="header"
      >
        <div
          data-stylename="logo"
          style={
            Object {
              "backgroundImage": "url(avatar.png)",
            }
          }
        />
        <div
          data-stylename="header-text"
        >
          <div
            data-stylename="header-contents"
          >
            <span
              data-stylename="header-name"
            >
              Spacebase
            </span>
            <div
              data-stylename="header-subtitle"
            >
              <Icon
                data-stylename="header-icon"
                name="Location"
              >
                <span
                  className="icon-Location"
                  data-stylename="icon"
                />
              </Icon>
              space, duh
            </div>
          </div>
        </div>
      </div>
    </div>
    <ReactTooltip
      backgroundColor="rgba(35, 65, 91, 1.0)"
      clickable={false}
      delayShow={0}
      effect="solid"
      getContent={[Function]}
      id="feed-banner-tip"
      insecure={true}
      place="bottom"
      resizeHide={true}
      wrapper="div"
    >
      <div
        className="__react_component_tooltip ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad place-bottom type-dark"
        data-id="tooltip"
        id="feed-banner-tip"
      >
        <style
          aria-hidden="true"
          dangerouslySetInnerHTML={
            Object {
              "__html": "
  	.ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad {
	    color: #fff;
	    background: #222;
	    border: 1px solid transparent;
  	}

  	.ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-top {
        margin-top: -10px;
    }
    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-top::before {
        border-top: 8px solid transparent;
    }
    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-top::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        bottom: -6px;
        left: 50%;
        margin-left: -8px;
        border-top-color: #222;
        border-top-style: solid;
        border-top-width: 6px;
    }

    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-bottom {
        margin-top: 10px;
    }
    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-bottom::before {
        border-bottom: 8px solid transparent;
    }
    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-bottom::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        top: -6px;
        left: 50%;
        margin-left: -8px;
        border-bottom-color: #222;
        border-bottom-style: solid;
        border-bottom-width: 6px;
    }

    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-left {
        margin-left: -10px;
    }
    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-left::before {
        border-left: 8px solid transparent;
    }
    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-left::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        right: -6px;
        top: 50%;
        margin-top: -4px;
        border-left-color: #222;
        border-left-style: solid;
        border-left-width: 6px;
    }

    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-right {
        margin-left: 10px;
    }
    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-right::before {
        border-right: 8px solid transparent;
    }
    .ta20a7e52-6ffb-4e0b-8df0-c19ba10f8bad.place-right::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        left: -6px;
        top: 50%;
        margin-top: -4px;
        border-right-color: #222;
        border-right-style: solid;
        border-right-width: 6px;
    }
  ",
            }
          }
        />
      </div>
    </ReactTooltip>
  </div>
</FeedBanner>
`;
