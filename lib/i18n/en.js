exports.en = {
  textForContribution: post => `You have been added as a contributor to the request "${post.summary()}"`,
  textForCommentImage: person => `${person} sent an image`,
  textForCommentMention: ({person, blurb, postName}) => `${person} mentioned you: "${blurb}" (in "${postName}")`,
  textForComment: ({person, blurb, postName}) => `${person}: "${blurb}" (in "${postName}")`,
  textForPostMention: ({person, postName}) => `${person} mentioned you in "${postName}"`,
  textForPost: ({person, postName, groupName}) => `${person} posted "${postName}" in ${groupName}`,
  textForAnnouncement: ({person, postName}) => `${person} sent an announcement titled "${postName}"`,
  textForEventInvitation: ({actor, postName}) => `${actor.get('name')} invited you to "${postName}"`,
  textForJoinRequest: ({actor, groupName}) => `${actor.get('name')} asked to join ${groupName}`,
  textForGroupInvitation: ({actor, groupName}) => `${actor.get('name')} invited you to join ${groupName}`,
  textForGroupInvitationAccepted: ({actor, groupName}) => `${actor.get('name')} accepted your invitation to join ${groupName}`,
  textForApprovedJoinRequest: ({actor, groupName}) => `${actor.get('name')} approved your request to join ${groupName}`,
  textForGroupChildGroupInvite: ({actor, parentGroup, childGroup}) => `${actor.get('name')} invited your group ${childGroup.name} to join their group ${parentGroup.name}`,
  textForGroupChildGroupInviteAcceptedParentModerator: ({actor, parentGroup, childGroup}) => `${actor.get('name')} accepted your invite of their group ${childGroup.name} to join your group ${parentGroup.name}`,
  textForGroupChildGroupInviteAcceptedChildModerator: ({actor, parentGroup, childGroup}) => `${actor.get('name')} accepted your invite of your group ${childGroup.name} to join their group ${parentGroup.name}`,
  textForGroupChildGroupInviteAcceptedParentMember: ({parentGroup, childGroup}) => `The group ${childGroup.name} just joined your group ${parentGroup.name}!`,
  textForGroupChildGroupInviteAcceptedChildMember: ({parentGroup, childGroup}) => `Your group ${childGroup.name} has joined ${parentGroup.name}. You can now join ${parentGroup.name}!`,
  textForGroupParentGroupJoinRequest: ({actor, parentGroup, childGroup}) => `${actor.get('name')} is requesting to add their group ${childGroup.name} as a member of your group ${parentGroup.name}`,
  textForGroupParentGroupJoinRequestAcceptedParentModerator: ({actor, parentGroup, childGroup}) => `${actor.get('name')} accepted a request to add ${childGroup.name} to your group ${parentGroup.name}`,
  textForGroupParentGroupJoinRequestAcceptedChildModerator: ({actor, parentGroup, childGroup}) => `Your group ${childGroup.name} has been accepted as a member of ${parentGroup.name} by ${actor.get('name')}`,
  textForGroupParentGroupJoinRequestAcceptedParentMember: ({parentGroup, childGroup}) => `The group ${childGroup.name} just joined your group ${parentGroup.name}!`,
  textForGroupParentGroupJoinRequestAcceptedChildMember: ({parentGroup, childGroup}) => `Your group ${childGroup.name} has joined ${parentGroup.name}.`,
  textForDonationTo: ({amount, postName}) => `You contributed $${amount} to "${postName}"`,
  textForDonationFrom: ({amount, actor, postName}) => `${actor.get('name')} contributed $${amount} to "${postName}"`,
  newSavedSearchResults: (name) => `New saved search results in ${name}`,
  recentActivityFrom: (name) => `Recent activity from ${name}`,
  createInvitationSubject: (name) => `Join me in ${name} on Hylo!`,
  apiInviteMessageContent: (name) => `${name} is excited to invite you to join our community on Hylo.`,
  apiInviteMessageSubject: (name) => `Join me in ${name} on Hylo!`,
  clientInviteSubjectDefault: (name) => `You've been invited to join ${name} on Hylo`,
  clientInviteMessageDefault: ({userName, groupName}) => `Hi ${userName}, <br><br> We're excited to welcome you into our community. Click below to join ${groupName} on Hylo.`,
  Group: () => 'Group',
  groupCreatedNotifySubject: (name) => `New Hylo Group Created: ${name}`,
  Name: () => 'Name',
  CreatorEmail: () => 'Creator Email',
  CreatorName: () => 'Creator Name',
  CreatorURL: () => 'Creator URL',
}