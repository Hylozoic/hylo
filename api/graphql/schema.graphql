# The currently logged-in person.
type Me {
  id: ID
  name: String
  avatar_url: String
  memberships(first: Int, cursor: ID, order: String): [Membership]
  posts(first: Int, cursor: ID, order: String): [Post]
}

type Person {
  id: ID
  name: String
  avatar_url: String
  posts(first: Int, cursor: ID, order: String): [Post]
}

type Membership {
  id: ID
  role: Int
  created_at: String
  last_viewed_at: String
  community: Community
}

type Community {
  id: ID
  name: String
  slug: String
  memberships(first: Int, cursor: ID, order: String): [Membership]
  members(first: Int, cursor: ID, order: String): [Person]
}

type Follow {
  id: ID
  created_at: String
  post: Post
  person: Person
}

type Post {
  id: ID
  title: String
  details: String
  created_at: String
  creator: Person
  follows(first: Int, cursor: ID, order: String): [Follow]
  followers(first: Int, cursor: ID, order: String): [Person]
  communities(first: Int, cursor: ID, order: String): [Community]
}

type Query {
  me: Me
  me2: Me
  person(id: ID): Person
  community(id: ID, slug: String): Community
}
