// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mapStateToProps returns the right keys 1`] = `
Object {
  "commonRoles": Array [
    Object {
      "id": 1,
      "name": "Coordinator",
      "responsibilities": Array [
        Object {
          "id": 1,
          "title": "Administration",
        },
      ],
    },
  ],
  "currentUser": SessionBoundModel {
    "_fields": Object {
      "id": "1",
      "membershipCommonRoles": Object {
        "items": Array [
          Object {
            "commonRoleId": 1,
            "groupId": "99",
            "id": 1,
            "userId": 1,
          },
        ],
      },
    },
    "id": "1",
    "membershipCommonRoles": Object {
      "items": Array [
        Object {
          "commonRoleId": 1,
          "groupId": "99",
          "id": 1,
          "userId": 1,
        },
      ],
    },
  },
  "fetchCollectionPostsPending": undefined,
  "fetchPending": undefined,
  "group": null,
  "parentGroups": Array [],
  "slug": "foo",
}
`;

exports[`mergeProps merges the props 1`] = `
Object {
  "graphql": Object {
    "query": "query ($slug: String) {
        group (slug: $slug) {
          id
          accessibility
          avatarUrl
          bannerUrl
          description
          geoShape
          location
          locationObject {
            id
            addressNumber
            addressStreet
            bbox {
              lat
              lng
            }
            center {
              lat
              lng
            }
            city
            country
            fullText
            locality
            neighborhood
            region
          }
          invitePath
          name
          purpose
          settings {
            allowGroupInvites
            askGroupToGroupJoinQuestions
            askJoinQuestions
            hideExtensionData
            locationDisplayPrecision
            publicMemberDirectory
            showSuggestedSkills
          }
          type
          slug
          visibility
          agreements {
            items {
              id
              description
              order
              title
            }
          }
          childGroups (first: 100) {
            items {
              id
              name
              avatarUrl
            }
          }
          customViews {
            items {
              id
              activePostsOnly
              collectionId
              collection {
                id
                name
              }
              defaultSort
              defaultViewMode
              externalLink
              groupId
              isActive
              icon
              name
              order
              postTypes
              topics {
                id
                name
              }
              type
            }
          }
          groupRoles {
            items {
              active
              id
              emoji
              color
              name
              description
            }
          }
          groupToGroupJoinQuestions {
            items {
              id
              questionId
              text
            }
          }
          joinQuestions {
            items {
              id
              questionId
              text
            }
          }
          stewards (first: 100) {
            hasMore
            items {
              id
              name
              avatarUrl
            }
          }
          parentGroups (first: 100) {
            items {
              avatarUrl
              id
              name
            }
          }
          prerequisiteGroups {
            items {
              avatarUrl
              id
              name
              slug
            }
          }
          pendingInvitations {
            hasMore
            items {
              id
              email
              createdAt
              lastSentAt
            }
          }
          suggestedSkills {
            items {
              id
              name
            }
          }
        }
      }",
    "variables": Object {
      "slug": "foo",
    },
  },
  "meta": Object {
    "extractModel": "Group",
  },
  "type": "GroupSettings/FETCH_GROUP_SETTINGS",
}
`;

exports[`mergeProps merges the props 2`] = `undefined`;

exports[`mergeProps merges the props 3`] = `
Object {
  "addPostToCollection": [Function],
  "commonRoles": Array [
    Object {
      "id": 1,
      "name": "Coordinator",
      "responsibilities": Array [
        Object {
          "id": 1,
          "title": "Administration",
        },
      ],
    },
  ],
  "createCollection": [Function],
  "currentUser": SessionBoundModel {
    "_fields": Object {
      "id": "1",
      "membershipCommonRoles": Object {
        "items": Array [
          Object {
            "commonRoleId": 1,
            "groupId": "99",
            "id": 1,
            "userId": 1,
          },
        ],
      },
    },
    "id": "1",
    "membershipCommonRoles": Object {
      "items": Array [
        Object {
          "commonRoleId": 1,
          "groupId": "99",
          "id": 1,
          "userId": 1,
        },
      ],
    },
  },
  "deleteGroup": [Function],
  "fetchCollectionPosts": [Function],
  "fetchCollectionPostsPending": undefined,
  "fetchGroupSettings": [Function],
  "fetchGroupSettingsMaker": [Function],
  "fetchLocation": [Function],
  "fetchPending": undefined,
  "group": null,
  "parentGroups": Array [],
  "removePostFromCollection": [Function],
  "reorderPostInCollection": [Function],
  "slug": "foo",
  "updateGroupSettings": [Function],
  "updateGroupSettingsMaker": [Function],
}
`;
